// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/Add16.hdl
/**
 * 16-bit adder: Adds two 16-bit two's complement values.
 * The most significant carry bit is ignored.
 */
CHIP Add16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    Xor(a=a[0], b=b[0], out=out[0]);
    And(a=a[0], b=b[0], out=carry0);

    // 位元 1: Full Adder
    Xor(a=a[1], b=b[1], out=xor01);
    Xor(a=xor01, b=carry0, out=out[1]);
    And(a=a[1], b=b[1], out=and01a);
    And(a=xor01, b=carry0, out=and01b);
    Or(a=and01a, b=and01b, out=carry1);

    // 位元 2: Full Adder
    Xor(a=a[2], b=b[2], out=xor02);
    Xor(a=xor02, b=carry1, out=out[2]);
    And(a=a[2], b=b[2], out=and02a);
    And(a=xor02, b=carry1, out=and02b);
    Or(a=and02a, b=and02b, out=carry2);

    // 位元 3: Full Adder
    Xor(a=a[3], b=b[3], out=xor03);
    Xor(a=xor03, b=carry2, out=out[3]);
    And(a=a[3], b=b[3], out=and03a);
    And(a=xor03, b=carry2, out=and03b);
    Or(a=and03a, b=and03b, out=carry3);

    // 位元 4: Full Adder
    Xor(a=a[4], b=b[4], out=xor04);
    Xor(a=xor04, b=carry3, out=out[4]);
    And(a=a[4], b=b[4], out=and04a);
    And(a=xor04, b=carry3, out=and04b);
    Or(a=and04a, b=and04b, out=carry4);

    // 位元 5: Full Adder
    Xor(a=a[5], b=b[5], out=xor05);
    Xor(a=xor05, b=carry4, out=out[5]);
    And(a=a[5], b=b[5], out=and05a);
    And(a=xor05, b=carry4, out=and05b);
    Or(a=and05a, b=and05b, out=carry5);

    // 位元 6: Full Adder
    Xor(a=a[6], b=b[6], out=xor06);
    Xor(a=xor06, b=carry5, out=out[6]);
    And(a=a[6], b=b[6], out=and06a);
    And(a=xor06, b=carry5, out=and06b);
    Or(a=and06a, b=and06b, out=carry6);

    // 位元 7: Full Adder
    Xor(a=a[7], b=b[7], out=xor07);
    Xor(a=xor07, b=carry6, out=out[7]);
    And(a=a[7], b=b[7], out=and07a);
    And(a=xor07, b=carry6, out=and07b);
    Or(a=and07a, b=and07b, out=carry7);

    // 位元 8: Full Adder
    Xor(a=a[8], b=b[8], out=xor08);
    Xor(a=xor08, b=carry7, out=out[8]);
    And(a=a[8], b=b[8], out=and08a);
    And(a=xor08, b=carry7, out=and08b);
    Or(a=and08a, b=and08b, out=carry8);

    // 位元 9: Full Adder
    Xor(a=a[9], b=b[9], out=xor09);
    Xor(a=xor09, b=carry8, out=out[9]);
    And(a=a[9], b=b[9], out=and09a);
    And(a=xor09, b=carry8, out=and09b);
    Or(a=and09a, b=and09b, out=carry9);

    // 位元 10: Full Adder
    Xor(a=a[10], b=b[10], out=xor10);
    Xor(a=xor10, b=carry9, out=out[10]);
    And(a=a[10], b=b[10], out=and10a);
    And(a=xor10, b=carry9, out=and10b);
    Or(a=and10a, b=and10b, out=carry10);

    // 位元 11: Full Adder
    Xor(a=a[11], b=b[11], out=xor11);
    Xor(a=xor11, b=carry10, out=out[11]);
    And(a=a[11], b=b[11], out=and11a);
    And(a=xor11, b=carry10, out=and11b);
    Or(a=and11a, b=and11b, out=carry11);

    // 位元 12: Full Adder
    Xor(a=a[12], b=b[12], out=xor12);
    Xor(a=xor12, b=carry11, out=out[12]);
    And(a=a[12], b=b[12], out=and12a);
    And(a=xor12, b=carry11, out=and12b);
    Or(a=and12a, b=and12b, out=carry12);

    // 位元 13: Full Adder
    Xor(a=a[13], b=b[13], out=xor13);
    Xor(a=xor13, b=carry12, out=out[13]);
    And(a=a[13], b=b[13], out=and13a);
    And(a=xor13, b=carry12, out=and13b);
    Or(a=and13a, b=and13b, out=carry13);

    // 位元 14: Full Adder
    Xor(a=a[14], b=b[14], out=xor14);
    Xor(a=xor14, b=carry13, out=out[14]);
    And(a=a[14], b=b[14], out=and14a);
    And(a=xor14, b=carry13, out=and14b);
    Or(a=and14a, b=and14b, out=carry14);

    // 位元 15: Full Adder
    Xor(a=a[15], b=b[15], out=xor15);
    Xor(a=xor15, b=carry14, out=out[15]);
    And(a=a[15], b=b[15], out=and15a);
    And(a=xor15, b=carry14, out=and15b);
    Or(a=and15a, b=and15b, out=carry15);
}